//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/create", ReplyAction="http://tempuri.org/IService1/createResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int create(object obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/create", ReplyAction="http://tempuri.org/IService1/createResponse")]
        System.Threading.Tasks.Task<int> createAsync(object obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readAll", ReplyAction="http://tempuri.org/IService1/readAllResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] readAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/readAll", ReplyAction="http://tempuri.org/IService1/readAllResponse")]
        System.Threading.Tasks.Task<object[]> readAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/read", ReplyAction="http://tempuri.org/IService1/readResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object read(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/read", ReplyAction="http://tempuri.org/IService1/readResponse")]
        System.Threading.Tasks.Task<object> readAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update", ReplyAction="http://tempuri.org/IService1/updateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        int update(object obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/update", ReplyAction="http://tempuri.org/IService1/updateResponse")]
        System.Threading.Tasks.Task<int> updateAsync(object obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        int delete(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        System.Threading.Tasks.Task<int> deleteAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Client.ServiceReference1.IService1>, Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int create(object obj) {
            return base.Channel.create(obj);
        }
        
        public System.Threading.Tasks.Task<int> createAsync(object obj) {
            return base.Channel.createAsync(obj);
        }
        
        public object[] readAll() {
            return base.Channel.readAll();
        }
        
        public System.Threading.Tasks.Task<object[]> readAllAsync() {
            return base.Channel.readAllAsync();
        }
        
        public object read(string id) {
            return base.Channel.read(id);
        }
        
        public System.Threading.Tasks.Task<object> readAsync(string id) {
            return base.Channel.readAsync(id);
        }
        
        public int update(object obj) {
            return base.Channel.update(obj);
        }
        
        public System.Threading.Tasks.Task<int> updateAsync(object obj) {
            return base.Channel.updateAsync(obj);
        }
        
        public int delete(string id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteAsync(string id) {
            return base.Channel.deleteAsync(id);
        }
    }
}
